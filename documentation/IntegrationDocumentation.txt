For this project we each took a game we each programmed and upgraded them. Since we each took the game we had originally coded we didn’t have to collaborate that much to make the upgrades. The games run very separate from each other and don’t interact so we didn’t have to integrate our code until the end. After each of our games were coded we uploaded them all to a main file containing a main menu listing all the games. We uploaded each game and updated the makefile accordingly as each game was finished being programmed. This meant that the games were all uploaded at different times so there wasn’t much overlap in the uploads. The only piece of code that got lost in the uploaded process was a piece of the makefile that got lost as two team members pushed their updates at the same time. This was quickly caught and fixed though and didn’t affect the overall functionality of our program. For this project we used top-down integration. We integrated the bigger parts of the code first and then put together the other parts. The first thing we integrated was the main.cpp file. A main menu was created and we each created a space to call our games files when they were finished. Next we integrated our games files. We integrated them into the main.cpp file and the makefile, making sure all our pieces were working together as they should. We did this because the game files could mostly be programmed and tested on their own. After being tested the games could then be integrated into the main.cpp file where the main menu is held.