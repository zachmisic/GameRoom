Over the next year, the platforms we have planned for our program to be deployed on look like they're going to stay pretty stable. Our main deployment plan is the plan surrounding the game being eventually embedded within the purchase of an operating system like how solitaire and minesweeper were or are automatically included in the download or purchase of Windows Operating System back in the late 2000s. Because the game is so quick and versatile, it functions as a quick distractor for people who work at computers for long periods of time, students working on coursework, or children going on a computer for the first time and just want quick entertainment. However, that functionality is endgame, and for the immediate future, the deployment plan is uploading the game onto a website with a packaged installer so it can be downloaded onto the PC from the internet. The most likely thing that will cause maintenance to be needed is an update release for the operating system. This will be adaptive maintenance, because it'll be in response to a change in the environment of the program. However, the only thing that will really need updating and changing is the installer due to this, because it is a c++ game, any GNU compiler should be able to deal with that over the next year. While changing the installer will set a need for developers to be hired, it is unlikely that this will need to happen so frequently that we would need to hire people full time to constantly upkeep our code. Thus, we can limit costs by hiring freelancers or having a team of people on retainer who know our program that we pay a small amount to throughout the year so we can call them whenever we need. This would make sense so we don't have to explain the code and development process and our goals for the program in the future to a new team of people every single time Microsoft or Apple decide to push an update for MacOS or Windows. A team of 3 or 4 developers will be able to handle this with ease as they won't be learning something new every time and they will be getting paid for being on call whenever they are needed for the code. These people will also be in charge of checking to see if an update has affected the ability of the installer to function and the program function on that operating system as well. We anticipate this to cost about $3700 dollars per head per month, which, assuming that we have 4 developers on out team will be around $16000 dollars spent on maintenance personnel. We think this cost is justified even though our income from this specific project with the current deployment plan is low, because our deployment is almost no cost compared to the expected income of the project as a whole. If any of the libraries used on any of the operating systems changes over the year, extra maintenance will be needed to respond to that and some up with a replacement function or write that replacement code in a timely manner so that the users won't be affected. Because the program will be local on machines and not connected to the internet, the changes that are made will also require permission from the user to be pushed to their machine through an update located on the cloud or from an internet push notification. While the c++ game code itself will unlikely be affected by changes in the operating system, it is better to keep it up to date in this way rather than let it get behind in versions.  